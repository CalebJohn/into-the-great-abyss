[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform sampler2D text;
uniform float width;
uniform float progress;

varying vec2 limit;

void vertex() {
	limit.xy = VERTEX/vec2(width);
}

void fragment() {
	COLOR = texture(text, UV);
	COLOR.a *= step(1.0 - progress, 1.0 - limit.x);
}"

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/width = null
shader_param/progress = null

