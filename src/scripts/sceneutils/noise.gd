extends Node


func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass
	
func grad(ha, x, y):
	var h = ha & 15
	var u = y
	if h<8:
		u = x
	var v = x
	if h<4:
		v = y
	var ru = -u
	var rv = -v
	if (h&1)==0:
		ru = u
	if (h&2)==2:
		rv = v
	return ru+rv

##broken perlin noise that makes cool natural looking cliffs
func cliffNoise(x):
	var pi = x.floor()
	var pf = x-pi
	var f = pf
	f = f*f*(Vector2(3.0, 3.0)-2.0*f)
	var A = p[int(pi.x)%256]
	var B = p[int(pi.y)%256]
	var AA = p[A]
	var BA = p[B]
	var AB = p[A+1]
	var BB = p[B+1]
	var h = lerp(lerp(grad(AA, pf.x, pf.y), grad(BA, pf.x-1, pf.y), f.x), lerp(grad(AB, pf.x, pf.y-1), grad(BB, pf.x-1, pf.y-1), f.x), f.y)
	return h
	
func fbmsimplex(x):
	var large = simplex(x*0.001)+1.0
	if large<0:
		print("oiii")
	return simplex(x*0.02)*0.7+simplex(x*0.07)*0.3+simplex(x*0.005)#+large

func simplex(x):
	var n0 = 0
	var n1 = 0
	var n2 = 0
	var s = (x.x+x.y)*F2
	var i = int(floor(x.x+s))
	var j = int(floor(x.y+s))
	var t = (i+j)*G2
	var X0 = i-t
	var Y0 = j-t
	var x0 = x.x-X0
	var y0 = x.y-Y0

	var i1 = 0
	var j1 = 0
	if (x0>y0):
		i1=1
		j1=0
	else:
		i1=0 
		j1=1      

	var x1 = x0 - i1 + G2
	var y1 = y0 - j1 + G2
	var x2 = x0 - 1.0 + 2.0 * G2
	var y2 = y0 - 1.0 + 2.0 * G2

	var ii = i & 255;
	var jj = j & 255;
	var gi0 = p12[ii+p[jj]]
	var gi1 = p12[ii+i1+p[jj+j1]]
	var gi2 = p12[ii+1+p[jj+1]]

	var t0 = 0.5 - x0*x0-y0*y0
	if(t0<0): 
		n0 = 0.0
	else:
		t0 *= t0
		n0 = t0 * t0 * grad3[gi0].dot(Vector2(x0, y0))
	var t1 = 0.5 - x1*x1-y1*y1
	if(t1<0):
		n1 = 0.0
	else:
		t1 *= t1
		n1 = t1 * t1 * grad3[gi1].dot(Vector2(x1, y1))
    
	var t2 = 0.5 - x2*x2-y2*y2
	if(t2<0):
		n2 = 0.0
	else:
		t2 *= t2
		n2 = t2 * t2 * grad3[gi2].dot(Vector2(x2, y2))
    

	return 70.0 * (n0 + n1 + n2)
  

func _init():
	for i in range(512):
		p12.append(p[i]%12)


var F2 = 0.5*(sqrt(3.0)-1.0);
var G2 = (3.0-sqrt(3.0))/6.0;

var grad3 = [Vector2(1,1), Vector2(-1,1), Vector2(1,-1), Vector2(-1,-1),
             Vector2(1,0), Vector2(-1,0), Vector2(1,0), Vector2(-1,0),
             Vector2(0,1), Vector2(0,-1), Vector2(0,1), Vector2(0,-1)]
var p12 = []
var p = [151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
   88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
   77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
   102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
   223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,151,160,137,91,90,15,
   131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
   190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
   88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
   77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
   102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
   135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
   5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
   223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
   129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
   251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
   49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
   138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]




