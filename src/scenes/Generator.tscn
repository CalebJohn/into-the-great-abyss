[gd_scene load_steps=8 format=1]

[ext_resource path="res://src/scripts/Generator.gd" type="Script" id=1]

[sub_resource type="CanvasItemShader" id=1]

_code = { "fragment":"float noise(vec2 x) {\n\tvec2 p = floor(x);\n\tvec2 f = fract(x);\n\tf = f*f*f*((6.0*f-vec2(15.0))*f+vec2(10.0));\n\tvec2 a = vec2(1.0, 0.0);\n\tfloat h = mix(mix(fract(sin(dot((p+a.yy)*19.19, vec2(14.73, 43.97)))*252849.342871), \n\t\t\t\t\t  fract(sin(dot((p+a.xy)*19.19, vec2(14.73, 43.97)))*252849.342871), f.x),\n\t\t\t\t  mix(fract(sin(dot((p+a.yx)*19.19, vec2(14.73, 43.97)))*252849.342871),\n\t\t\t\t\t  fract(sin(dot((p+a.xx)*19.19, vec2(14.73, 43.97)))*252849.342871), f.x), f.y);\n\treturn h;\n}\n\n//Based off of iq\'s described here: http://www.iquilezles.org/www/articles/voronoilin\nfloat cell(vec2 p, float s) {\n  vec2 n = floor(p);\n  vec2 f = fract(p);\n  float md = 5.0;\n  vec2 m = vec2(0.0);\n//Repeat enough times\n//-1, -1\n      vec2 g = vec2(-1, -1);\n\t  vec2 hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      vec2 o = hash2*vec2(s, s);\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      vec2 r = g + o - f;\n      float d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//-1, 0\n      g = vec2(-1.0, 0.0);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//-1, 1\n      g = vec2(-1, 1);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//0, -1\n      g = vec2(0, -1);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//0, 0\n      g = vec2(0, 0);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//0, 1\n      g = vec2(0, 1);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//1, -1\n      g = vec2(1, -1);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//1, 0\n      g = vec2(1, 0);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n//1, 1\n      g = vec2(1, 1);\n\t  hash2 = fract(vec2(sin(dot(n+g, vec2(123.4, 748.6))), sin(dot(n+g, vec2(547.3, 659.3))))*5232.85324);\n      o = hash2*s;\n      o = vec2(0.5, 0.5) + vec2(0.5, 0.5) * vec2(sin(0.64 + 5.038*o.x), sin(0.64 + 5.038*o.y));\n      r = g + o - f;\n      d = dot(r, r);\n      if (d<md) {\n        md = d;\n        m = n+g+o;\n      }\n\treturn md;\n}\n\nvec2 pos = SCREEN_UV*20.0;\npos.x += TIME;\nfloat height = noise(pos)*0.5+noise(pos*2)*0.35+noise(pos*4)*0.15;\nheight -= cell(pos*0.5, 1.0)*0.5+cell(pos*1, 1.0)*0.35+cell(pos*4, 1.0)*0.15;\nvec3 col = vec3(height);\nCOLOR = vec4(col, 1.0);", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=2]

shader/shader = SubResource( 1 )
shader/shading_mode = 0

[sub_resource type="CanvasItemShader" id=3]

_code = { "fragment":"uniform texture heightmap;\nuniform vec2 resolution = vec2(1000, 600);\n\nvec2 invRes = vec2(1.0)/resolution;\nfloat height1 = tex(heightmap, SCREEN_UV+vec2(-invRes.x, 0.0)).x;\nfloat height2 = tex(heightmap, SCREEN_UV+vec2(invRes.x, 0.0)).x;\nfloat height3 = tex(heightmap, SCREEN_UV+vec2(0.0, -invRes.y)).x;\nfloat height4 = tex(heightmap, SCREEN_UV+vec2(0.0, invRes.y)).x;\n\nvec3 norm = normalize(vec3(height1-height2, 0.02, height3-height4));\n\n\nCOLOR = vec4(norm, 1.0);", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=4]

shader/shader = SubResource( 3 )
shader/shading_mode = 0
shader_param/resolution = Vector2( 1000, 600 )

[sub_resource type="CanvasItemShader" id=5]

_code = { "fragment":"uniform texture heightmap;\nuniform texture normal;\nuniform vec2 resolution = vec2(1000, 600);\n\nvec3 sun = normalize(vec3(1.0, 1.0, 1.0));\nfloat bright = dot(tex(normal, SCREEN_UV).xyz, sun);\nbright = max(0.0, bright);\nfloat height = tex(heightmap, SCREEN_UV).x;\nvec3 col = mix(vec3(0.2, 0.4, 0.7), vec3(0.4, 0.2, 0.05), smoothstep(0.0, 0.1, height));\n\n\nCOLOR = vec4(col*bright, 1.0);", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=6]

shader/shader = SubResource( 5 )
shader/shading_mode = 0
shader_param/resolution = Vector2( 1000, 600 )

[node name="Generator" type="Node2D"]

script/script = ExtResource( 1 )

[node name="DisplaySprite" type="ViewportSprite" parent="."]

viewport = NodePath("../Pass3")
centered = false

[node name="Pass1" type="Viewport" parent="."]

rect = Rect2( 0, 0, 1000, 600 )
own_world = false
world = null
transparent_bg = false
render_target/enabled = true
render_target/v_flip = false
render_target/clear_on_new_frame = false
render_target/filter = false
render_target/gen_mipmaps = false
render_target/update_mode = 1
audio_listener/enable_2d = false
audio_listener/enable_3d = false
physics/object_picking = false
gui/disable_input = false

[node name="Heightmap" type="Polygon2D" parent="Pass1"]

material/material = SubResource( 2 )
transform/scale = Vector2( 1000, 600 )
polygon = Vector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
uv = Vector2Array(  )
color = Color( 1, 1, 1, 1 )
vertex_colors = ColorArray(  )
offset = Vector2( 0, 0 )
texture/texture = null
texture/offset = Vector2( 0, 0 )
texture/scale = Vector2( 1, 1 )
texture/rotation = 0.0
invert/enable = false
invert/border = 100.0

[node name="Pass2" type="Viewport" parent="."]

rect = Rect2( 0, 0, 1000, 600 )
own_world = false
world = null
transparent_bg = false
render_target/enabled = true
render_target/v_flip = false
render_target/clear_on_new_frame = false
render_target/filter = false
render_target/gen_mipmaps = false
render_target/update_mode = 0
audio_listener/enable_2d = false
audio_listener/enable_3d = false
physics/object_picking = false
gui/disable_input = false

[node name="MapNormal" type="Polygon2D" parent="Pass2"]

material/material = SubResource( 4 )
transform/scale = Vector2( 1000, 600 )
polygon = Vector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
uv = Vector2Array(  )
color = Color( 1, 1, 1, 1 )
vertex_colors = ColorArray(  )
offset = Vector2( 0, 0 )
texture/texture = null
texture/offset = Vector2( 0, 0 )
texture/scale = Vector2( 1, 1 )
texture/rotation = 0.0
invert/enable = false
invert/border = 100.0

[node name="Pass3" type="Viewport" parent="."]

rect = Rect2( 0, 0, 1000, 600 )
own_world = false
world = null
transparent_bg = false
render_target/enabled = true
render_target/v_flip = false
render_target/clear_on_new_frame = false
render_target/filter = false
render_target/gen_mipmaps = false
render_target/update_mode = 0
audio_listener/enable_2d = false
audio_listener/enable_3d = false
physics/object_picking = false
gui/disable_input = false

[node name="MapShade" type="Polygon2D" parent="Pass3"]

material/material = SubResource( 6 )
transform/scale = Vector2( 1000, 600 )
polygon = Vector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
uv = Vector2Array(  )
color = Color( 1, 1, 1, 1 )
vertex_colors = ColorArray(  )
offset = Vector2( 0, 0 )
texture/texture = null
texture/offset = Vector2( 0, 0 )
texture/scale = Vector2( 1, 1 )
texture/rotation = 0.0
invert/enable = false
invert/border = 100.0


